using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Navigation;
using System.Windows.Shapes;
using Microsoft.Kinect;

namespace WpfApplication1
{
    /// <summary>
    /// Interaction logic for MainWindow.xaml
    /// </summary>
    public partial class MainWindow : Window
    {
        public MainWindow()
        {
            InitializeComponent();
        }

        KinectSensor kinectSensor;
        private void Window_Loaded(object sender, RoutedEventArgs e)
        {
            try
            {
                KinectSensor.KinectSensors.StatusChanged += KinectSensors_StatusChanged;
                foreach (KinectSensor kinect in KinectSensor.KinectSensors)
                {
                    if (kinect.Status == KinectStatus.Connected)
                    {
                        kinectSensor = kinect;
                        break;
                    }
                }
                if (KinectSensor.KinectSensors.Count == 0)
                    Label1.Content = "No Kinect Found";
                else
                    Initialize();

            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message);
            }
        }

        private void KinectSensors_StatusChanged(object sender, StatusChangedEventArgs e)
        {
            //throw new NotImplementedException();
            switch (e.Status)
            {
                case KinectStatus.Initializing:
                    if (kinectSensor == null)
                    {
                        kinectSensor = e.Sensor;
                        Label1.Content  = "Kinect is initializing...";
                       
                     }
                    break;
                case KinectStatus.Connected:
                    if (kinectSensor == e.Sensor)
                    {
                        Initialize();
                        Label1.Content = "The Kinect is now ready !!! :-)";

                    }
                    break;
                case KinectStatus.Disconnected:
                    if (kinectSensor == e.Sensor)
                    {
                        Clean();
                        Label1.Content = "Kinect was disconnected";
                    }
                    break;
                /*case KinectStatus.NotReady:
                    if (kinectSensor == e.Sensor)
                        break;*/
                case KinectStatus.NotPowered:
                    if (kinectSensor == e.Sensor)
                    {
                        Clean();
                        Label1.Content = "Kinect is no longer powered";
                    }
                    break;
             
                default:
                    Label1.Content = "Unhandled status:" + e.Status;
                    break;
            }

        }

        private void Initialize()
        {
            if (kinectSensor == null)
                return;
            kinectSensor.Start();
        }

        private void Clean()
        {
            if (kinectSensor != null)
            {
                kinectSensor.Stop();
                kinectSensor = null;
            }
        }

        
       // public KinectSensor kinect { get; set; }
    }
}
