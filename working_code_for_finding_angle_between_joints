public void ToGetTheAngleBetweenJoints(Skeleton skeleton)
        {

            Joint r_wrist = skeleton.Joints[JointType.WristRight];

            Joint r_shoulder = skeleton.Joints[JointType.ShoulderRight];

            Joint r_elbow = skeleton.Joints[JointType.ElbowRight];

            Joint r_hand = skeleton.Joints[JointType.HandRight];

            double x1 = r_shoulder.Position.X;
            double y1 = r_shoulder.Position.Y;
            double z1 = r_shoulder.Position.Z;

            double x2 = r_elbow.Position.X;
            double y2 = r_elbow.Position.Y;
            double z2 = r_elbow.Position.Z;

            double x3 = r_wrist.Position.X;
            double y3 = r_wrist.Position.Y;
            double z3 = r_wrist.Position.Z;

            double x4 = r_hand.Position.X;
            double y4 = r_hand.Position.Y;
            double z4 = r_hand.Position.Z;

            Vector3D v1 = new Vector3D(x2,y2,z2);
            Vector3D v2 = new Vector3D(x1,y1,z1);
            Vector3D v3 = new Vector3D(x3,y3,z3);

            Vector3D v4 = new Vector3D(x3, y3, z3);
            Vector3D v5 = new Vector3D(x2, y2, z2);
            Vector3D v6 = new Vector3D(x4, y4, z4);

            Vector3D b1 = v3 - v1;
            Vector3D b2 = v2 - v1;

            Vector3D b3 = v6 - v4;
            Vector3D b4 = v5 - v4;

            b1.Normalize();
            b2.Normalize();

            b3.Normalize();
            b4.Normalize();

            double AngleInRadiansForElbowMovement = AngleBetweenTwoVectors(b1, b2);
            double AngleInDegForElbowMovement = AngleInRadiansForElbowMovement * (180 / Math.PI);
            //Angle.Content = (int)AngleInDegForElbowMovement;

            double AngleInRadiansForWristMovement = AngleBetweenTwoVectors(b3, b4);
            double AngleInDegForWristMovement = AngleInRadiansForWristMovement * (180 / Math.PI);
            Angle.Content = (int)AngleInDegForWristMovement;

        }

         public float AngleBetweenTwoVectors(Vector3D vectorA, Vector3D vectorB)
         {
            
             double dotProduct = 0.0f;
            
             dotProduct=  Vector3D.DotProduct(vectorA,  vectorB);

             return (float)Math.Acos(dotProduct); 
         
         }
